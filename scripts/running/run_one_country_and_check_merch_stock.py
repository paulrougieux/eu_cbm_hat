
################################################################################
##################### JRC's version using libcbm_runner ########################
################################################################################
# Data preparation: 
# Copy the 


# Import
from libcbm_runner.core.continent import continent

# Init
scenario = continent.scenarios['historical']
runner_libcbm = scenario.runners['LU'][-1]
runner_libcbm.run()

# Show results
#print(runner_libcbm.simulation.results)
#print(runner_libcbm.simulation.inventory)

# Retrieve pools
pools_libcbm = runner_libcbm.simulation.results.pools

# Make dataframe
merch_libcbm_by_year = (pools_libcbm
  .groupby('timestep')
  .agg({'HardwoodMerch': 'sum',
        'SoftwoodMerch': 'sum'})
  .reset_index())

# Show the 100 year simulation
print(merch_libcbm_by_year)

# Show only the 33 years run in the static demand scenario
print(merch_libcbm_by_year.iloc[0:33,])

#      timestep  HardwoodMerch  SoftwoodMerch
# 0           0   6.541837e+06   3.742087e+06

# Pools after adding the classifier 8 initialization of historical yield curves
# Before changing the pre dynamics func
#      timestep  HardwoodMerch  SoftwoodMerch
# 0           0   3.525395e+06   1.794624e+06
# 1           1   3.545718e+06   1.822014e+06
# 2           2   3.565945e+06   1.849315e+06
# 3           3   3.586067e+06   1.876554e+06
# 4           4   3.606076e+06   1.903788e+06
# ..        ...            ...            ...
# 96         96   4.675313e+06   3.502686e+06
# 97         97   4.680244e+06   3.510688e+06
# 98         98   4.685087e+06   3.518549e+06
# 99         99   4.689840e+06   3.526268e+06
# 100       100   4.694504e+06   3.533846e+06

# After changing the pre dynamics func
# In [8]: print(merch_libcbm_by_year)
#      timestep  HardwoodMerch  SoftwoodMerch
# 0           0   3.525395e+06   1.794624e+06
# 1           1   3.557359e+06   1.808860e+06
# 2           2   3.588982e+06   1.822863e+06
# 3           3   3.619472e+06   1.835535e+06
# 4           4   3.650726e+06   1.849599e+06
# ..        ...            ...            ...
# 96         96   6.050578e+06   2.730617e+06
# 97         97   6.082812e+06   2.723987e+06
# 98         98   6.114835e+06   2.717199e+06
# 99         99   6.146645e+06   2.710249e+06
# 100       100   6.178240e+06   2.703150e+06



###############################################################################
################ Canada's version using only libcbm_py ########################
###############################################################################

# Imports
from libcbm.input.sit import sit_cbm_factory
from libcbm.model.cbm import cbm_simulator
import os

# Constants
# Uses the json file generated by the above code
json_config_path = "/home/paul/rp/libcbm_data/scenarios/historical/LU/0/input/json/config.json"
db_path = "/home/paul/repos/libcbm_data/countries/LU/orig/config/aidb.db"

# Function
def run_libcbm():
    #libcbm_config_path = os.path.abspath(json_config_path)
    libcbm_config_path = json_config_path
    sit = sit_cbm_factory.load_sit(libcbm_config_path, db_path)
    classifiers, inventory = sit_cbm_factory.initialize_inventory(sit)
    cbm = sit_cbm_factory.initialize_cbm(sit)
    results, reporting_func = cbm_simulator.create_in_memory_reporting_func()
    rule_based_processor = sit_cbm_factory.create_sit_rule_based_processor(sit, cbm)
    cbm_simulator.simulate(
        cbm,
        n_steps              = 102,
        classifiers          = classifiers,
        inventory            = inventory,
        pool_codes           = sit.defaults.get_pools(),
        flux_indicator_codes = sit.defaults.get_flux_indicators(),
        pre_dynamics_func    = rule_based_processor.pre_dynamic_func,
        reporting_func       = reporting_func
    )
    return results

# Run libcbm
libcbm_results = run_libcbm()

# Make dataframe
libcbm_merch_by_timestep = libcbm_results.pools[
    ["timestep", "SoftwoodMerch", "HardwoodMerch"]
].groupby("timestep").sum().rename(
    columns={
        "timestep": "TimeStep",
        "SoftwoodMerch": "swm_libcbm",
        "HardwoodMerch": "hwm_libcbm"
    })

# Show
print(libcbm_merch_by_timestep)

# Results using the current yield Curves
#             swm_libcbm    hwm_libcbm
# timestep
# 0         3.742087e+06  6.541837e+06

# Results using the historical yield curves
# Changing line 30 in
# ~/rp/libcbm_data/scenarios/historical/LU/0/input/json/config.json
# "path": "/home/paul/repos/libcbm_data/scenarios/historical/LU/0/input/csv/historical_yields.csv"
# RuntimeWarning)
#             swm_libcbm    hwm_libcbm
# timestep
# 0         1.794624e+06  3.525395e+06

